// Mocks generated by Mockito 5.0.17 from annotations
// in carg/test/widgets/belote_widget_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:carg/models/score/french_belote_score.dart' as _i5;
import 'package:carg/models/score/misc/belote_team_enum.dart' as _i6;
import 'package:carg/models/score/round/belote_round.dart' as _i7;
import 'package:carg/models/score/round/french_belote_round.dart' as _i2;
import 'package:carg/services/score/french_belote_score_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFrenchBeloteRound_0 extends _i1.Fake
    implements _i2.FrenchBeloteRound {}

/// A class which mocks [FrenchBeloteScoreService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFrenchBeloteScoreService extends _i1.Mock
    implements _i3.FrenchBeloteScoreService {
  MockFrenchBeloteScoreService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i5.FrenchBeloteScore?> getScoreByGame(String? gameId) =>
      (super.noSuchMethod(Invocation.method(#getScoreByGame, [gameId]),
              returnValue: Future<_i5.FrenchBeloteScore?>.value())
          as _i4.Future<_i5.FrenchBeloteScore?>);
  @override
  _i4.Stream<_i5.FrenchBeloteScore> getScoreByGameStream(String? gameId) =>
      (super.noSuchMethod(Invocation.method(#getScoreByGameStream, [gameId]),
              returnValue: Stream<_i5.FrenchBeloteScore>.empty())
          as _i4.Stream<_i5.FrenchBeloteScore>);
  @override
  _i4.Future<dynamic> addRoundToGame(
          String? gameId, _i2.FrenchBeloteRound? beloteRound) =>
      (super.noSuchMethod(
          Invocation.method(#addRoundToGame, [gameId, beloteRound]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> deleteScoreByGame(String? gameId) =>
      (super.noSuchMethod(Invocation.method(#deleteScoreByGame, [gameId]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<String> saveScore(_i5.FrenchBeloteScore? beloteScore) =>
      (super.noSuchMethod(Invocation.method(#saveScore, [beloteScore]),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<dynamic> editLastRoundOfGame(
          String? gameId, _i2.FrenchBeloteRound? round) =>
      (super.noSuchMethod(
          Invocation.method(#editLastRoundOfGame, [gameId, round]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> updateScore(_i5.FrenchBeloteScore? score) =>
      (super.noSuchMethod(Invocation.method(#updateScore, [score]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> deleteLastRoundOfGame(String? gameId) =>
      (super.noSuchMethod(Invocation.method(#deleteLastRoundOfGame, [gameId]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i2.FrenchBeloteRound getNewRound() =>
      (super.noSuchMethod(Invocation.method(#getNewRound, []),
          returnValue: _FakeFrenchBeloteRound_0()) as _i2.FrenchBeloteRound);
  @override
  int getPointsOfRound(
          _i6.BeloteTeamEnum? teamGameEnum, _i7.BeloteRound? teamGameRound) =>
      (super.noSuchMethod(
          Invocation.method(#getPointsOfRound, [teamGameEnum, teamGameRound]),
          returnValue: 0) as int);
}
