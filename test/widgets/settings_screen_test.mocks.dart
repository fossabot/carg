// Mocks generated by Mockito 5.1.0 from annotations
// in carg/test/widgets/settings_screen_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:ui' as _i9;

import 'package:carg/models/game/game.dart' as _i6;
import 'package:carg/models/player.dart' as _i2;
import 'package:carg/models/players/players.dart' as _i7;
import 'package:carg/services/auth_service.dart' as _i8;
import 'package:carg/services/player_service.dart' as _i4;
import 'package:flutter/material.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePlayer_0 extends _i1.Fake implements _i2.Player {}

class _FakeWidget_1 extends _i1.Fake implements _i3.Widget {
  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [PlayerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlayerService extends _i1.Mock implements _i4.PlayerService {
  MockPlayerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i2.Player>> searchPlayers(
          {String? query = r'', String? playerId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #searchPlayers, [], {#query: query, #playerId: playerId}),
              returnValue: Future<List<_i2.Player>>.value(<_i2.Player>[]))
          as _i5.Future<List<_i2.Player>>);
  @override
  _i5.Future<dynamic> incrementPlayedGamesByOne(
          String? id, _i6.Game<_i7.Players>? game) =>
      (super.noSuchMethod(
          Invocation.method(#incrementPlayedGamesByOne, [id, game]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> incrementWonGamesByOne(
          String? id, _i6.Game<_i7.Players>? game) =>
      (super.noSuchMethod(
          Invocation.method(#incrementWonGamesByOne, [id, game]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<_i2.Player> getPlayer(String? id) =>
      (super.noSuchMethod(Invocation.method(#getPlayer, [id]),
              returnValue: Future<_i2.Player>.value(_FakePlayer_0()))
          as _i5.Future<_i2.Player>);
  @override
  _i5.Future<_i2.Player?> getPlayerOfUser(String? userId) =>
      (super.noSuchMethod(Invocation.method(#getPlayerOfUser, [userId]),
          returnValue: Future<_i2.Player?>.value()) as _i5.Future<_i2.Player?>);
  @override
  _i5.Future<void> updatePlayer(_i2.Player? player) =>
      (super.noSuchMethod(Invocation.method(#updatePlayer, [player]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<String> addPlayer(_i2.Player? player) =>
      (super.noSuchMethod(Invocation.method(#addPlayer, [player]),
          returnValue: Future<String>.value('')) as _i5.Future<String>);
  @override
  _i5.Future<dynamic> deletePlayer(_i2.Player? player) =>
      (super.noSuchMethod(Invocation.method(#deletePlayer, [player]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i8.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAuth =>
      (super.noSuchMethod(Invocation.getter(#isAuth), returnValue: false)
          as bool);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i5.Future<String> googleLogIn() =>
      (super.noSuchMethod(Invocation.method(#googleLogIn, []),
          returnValue: Future<String>.value('')) as _i5.Future<String>);
  @override
  _i5.Future<void> sendSignInWithEmailLink(String? email) =>
      (super.noSuchMethod(Invocation.method(#sendSignInWithEmailLink, [email]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<String> signInWithEmailLink(String? email, String? link) => (super
      .noSuchMethod(Invocation.method(#signInWithEmailLink, [email, link]),
          returnValue: Future<String>.value('')) as _i5.Future<String>);
  @override
  _i5.Future<String> validatePhoneNumber(
          String? smsCode, String? verificationId) =>
      (super.noSuchMethod(
          Invocation.method(#validatePhoneNumber, [smsCode, verificationId]),
          returnValue: Future<String>.value('')) as _i5.Future<String>);
  @override
  _i5.Future<dynamic> changePhoneNumber(
          String? smsCode, String? verificationId) =>
      (super.noSuchMethod(
          Invocation.method(#changePhoneNumber, [smsCode, verificationId]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> resendPhoneVerificationCode(
          String? phoneNumber, _i3.BuildContext? context) =>
      (super.noSuchMethod(
          Invocation.method(
              #resendPhoneVerificationCode, [phoneNumber, context]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> sendPhoneVerificationCode(
          String? phoneNumber,
          _i3.BuildContext? context,
          _i8.CredentialVerificationType? credentialVerificationType) =>
      (super.noSuchMethod(
          Invocation.method(#sendPhoneVerificationCode,
              [phoneNumber, context, credentialVerificationType]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<bool> isAlreadyLogin() =>
      (super.noSuchMethod(Invocation.method(#isAlreadyLogin, []),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<void> signOut(_i3.BuildContext? context) =>
      (super.noSuchMethod(Invocation.method(#signOut, [context]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> changeEmail(String? newEmail) =>
      (super.noSuchMethod(Invocation.method(#changeEmail, [newEmail]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i3.Widget getCorrectLandingScreen() =>
      (super.noSuchMethod(Invocation.method(#getCorrectLandingScreen, []),
          returnValue: _FakeWidget_1()) as _i3.Widget);
  @override
  void setCurrentPlayer(_i2.Player? player) =>
      super.noSuchMethod(Invocation.method(#setCurrentPlayer, [player]),
          returnValueForMissingStub: null);
  @override
  void addListener(_i9.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i9.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
