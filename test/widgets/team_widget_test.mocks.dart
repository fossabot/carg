// Mocks generated by Mockito 5.0.17 from annotations
// in carg/test/widgets/team_widget_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:carg/models/game/game.dart' as _i5;
import 'package:carg/models/players/players.dart' as _i6;
import 'package:carg/models/team.dart' as _i2;
import 'package:carg/services/team_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTeam_0 extends _i1.Fake implements _i2.Team {}

/// A class which mocks [TeamService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTeamService extends _i1.Mock implements _i3.TeamService {
  MockTeamService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Team> getTeamByPlayers(List<String?>? playerIds) =>
      (super.noSuchMethod(Invocation.method(#getTeamByPlayers, [playerIds]),
              returnValue: Future<_i2.Team>.value(_FakeTeam_0()))
          as _i4.Future<_i2.Team>);
  @override
  _i4.Future<_i2.Team> getTeam(String? id) =>
      (super.noSuchMethod(Invocation.method(#getTeam, [id]),
              returnValue: Future<_i2.Team>.value(_FakeTeam_0()))
          as _i4.Future<_i2.Team>);
  @override
  _i4.Future<_i2.Team> incrementPlayedGamesByOne(
          String? id, _i5.Game<_i6.Players>? game) =>
      (super.noSuchMethod(
              Invocation.method(#incrementPlayedGamesByOne, [id, game]),
              returnValue: Future<_i2.Team>.value(_FakeTeam_0()))
          as _i4.Future<_i2.Team>);
  @override
  _i4.Future<_i2.Team> incrementWonGamesByOne(
          String? id, _i5.Game<_i6.Players>? game) =>
      (super.noSuchMethod(
              Invocation.method(#incrementWonGamesByOne, [id, game]),
              returnValue: Future<_i2.Team>.value(_FakeTeam_0()))
          as _i4.Future<_i2.Team>);
}
